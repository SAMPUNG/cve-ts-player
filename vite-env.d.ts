/// <reference types="vite/client" />

interface Date {
  Format(fmt: string): string
}

interface Document {
  mozExitPointerLock?(): void
  mozPointerLockElement?: Element
}

interface HTMLElement {
  mozRequestPointerLock?(): void
  onmousewheel?: (ev: WheelEvent) => void
  pressMouseButtons?(ev: MouseEvent): void
  releaseMouseButtons?(ev: MouseEvent): void
}

interface HTMLElementEventMap {
  connect: CustomEvent<number>
  debug: CustomEvent<unknown>
  disconnect: CustomEvent<string>
  init: CustomEvent<unknown>
  measure: CustomEvent<unknown>
  pick: CustomEvent<unknown>
  reject: CustomEvent<string>
  render: CustomEvent<unknown>
}

interface Navigator {
  webkitGetGamepads?: () => (Gamepad | null)[]
}

interface RTCRtpReceiver {
  playoutDelayHint?: number
}

interface RTCSessionDescriptionInit {
  sfu?: boolean
}

interface WheelEvent {
  wheelDelta?: number
}

interface Window {
  mozRequestAnimationFrame?(callback: FrameRequestCallback): number
  MozWebSocket?: WebSocket
  webkitRequestAnimationFrame?(callback: FrameRequestCallback): number
  WebKitGamepadEvent?: GamepadEvent
}

interface WindowEventMap {
  webkitgamepadconnected: GamepadEvent
  webkitgamepaddisconnected: GamepadEvent
}
