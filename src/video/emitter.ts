import { MessageType } from '@cve-ts/dictionary'
import { send } from '../liaison/emitter'
import {
  normalizeAndQuantizeSigned,
  normalizeAndQuantizeUnsigned,
} from '../wrapper/coords'

export function emitMouseDown(button: number, x: number, y: number) {
  const coord = normalizeAndQuantizeUnsigned(x, y)
  const Data = new DataView(new ArrayBuffer(6))
  Data.setUint8(0, MessageType.MouseDown)
  Data.setUint8(1, button)
  Data.setUint16(2, coord.x, true)
  Data.setUint16(4, coord.y, true)
  send(Data.buffer)
}

export function emitMouseMove(
  x: number,
  y: number,
  deltaX: number,
  deltaY: number
) {
  const coord = normalizeAndQuantizeUnsigned(x, y)
  const delta = normalizeAndQuantizeSigned(deltaX, deltaY)
  const Data = new DataView(new ArrayBuffer(9))
  Data.setUint8(0, MessageType.MouseMove)
  Data.setUint16(1, coord.x, true)
  Data.setUint16(3, coord.y, true)
  Data.setInt16(5, delta.x, true)
  Data.setInt16(7, delta.y, true)
  send(Data.buffer)
}

export function emitMouseUp(button: number, x: number, y: number) {
  const coord = normalizeAndQuantizeUnsigned(x, y)
  const Data = new DataView(new ArrayBuffer(6))
  Data.setUint8(0, MessageType.MouseUp)
  Data.setUint8(1, button)
  Data.setUint16(2, coord.x, true)
  Data.setUint16(4, coord.y, true)
  send(Data.buffer)
}

export function emitMouseWheel(delta: number, x: number, y: number) {
  const coord = normalizeAndQuantizeUnsigned(x, y)
  const Data = new DataView(new ArrayBuffer(7))
  Data.setUint8(0, MessageType.MouseWheel)
  Data.setInt16(1, delta, true)
  Data.setUint16(3, coord.x, true)
  Data.setUint16(5, coord.y, true)
  send(Data.buffer)
}
