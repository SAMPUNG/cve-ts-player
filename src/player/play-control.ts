import { player } from '../player/custom-element'
import { emitEvent } from '../player/emitter'
import { createWebSocket, ws } from '../liaison/web-socket'
import { onResizePlayerStyle } from '../style/events'
import { setVideoEnabled } from '../video/controls'
import { emitUIInteraction } from '../liaison/emitter'
import { getPixelStreamingInstance } from './pixel-streaming'

export function open(levelName?: string, sceneName?: string) {
  const LevelName = levelName ?? player?.getAttribute('level-name')
  const SceneName = sceneName ?? player?.getAttribute('scene-name')
  if (LevelName && SceneName) {
    const Data = { LevelName, SceneName }
    emitUIInteraction({ Command: 'OpenLevel', Data })
  }
}

export async function run(name: string) {
  const url = await getPixelStreamingInstance(name)
  if (url) {
    player?.setAttribute('url', url)
    start(url)
  }
}

export let reconnecting: boolean = false
export function reconnect(enable: boolean = true) {
  reconnecting = enable
}

export function start(url: string) {
  if (!player?.isConnected) {
    return
  }

  if (reconnecting) {
    setVideoEnabled(true)
    onResizePlayerStyle()
  }
  emitEvent('start', reconnecting)
  emitEvent('kick', 0)

  createWebSocket(url)
}

export function stop() {
  if (!player?.isConnected) {
    return
  }

  ws?.close()
  player.disconnectedCallback()
}
