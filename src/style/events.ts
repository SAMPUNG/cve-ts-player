import wrapper from '../wrapper/element'

import { player } from '../player/custom-element'
import { emitDebugEvent } from '../player/emitter'
import { updateVideoStreamSize } from '../video/controls'
import { setupMouseAndFreezeFrame } from '../wrapper/coords'

import { resize } from './resolution'

export function disposeResizeEvents() {
  window.removeEventListener('resize', onResizePlayerStyle, true)
  window.removeEventListener('orientationchange', onOrientationChangeHandler)
}

let orientationTimer: NodeJS.Timeout | undefined
export function onOrientationChangeHandler() {
  if (orientationTimer) {
    clearTimeout(orientationTimer)
  }
  orientationTimer = setTimeout(onResizePlayerStyle, 500)
}

export function onResizePlayerStyle() {
  if (!player?.isConnected) {
    return
  }

  updateVideoStreamSize()

  if (wrapper.classList.contains('fixed-size')) {
    setupMouseAndFreezeFrame()
    return
  }

  resize()

  setupMouseAndFreezeFrame()

  emitDebugEvent('resize', Date.now())
}

export function registerResizeEvents() {
  window.addEventListener('resize', onResizePlayerStyle, true)
  window.addEventListener('orientationchange', onOrientationChangeHandler)
}
