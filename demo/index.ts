import { emitUIInteraction } from '@/liaison/emitter'
import { player } from '@/player/custom-element'

import type{ CveDebugDetail } from '~/types/player/emitter'

const fly = () => {
  setTimeout(() => {
    const name = player?.getAttribute('application-name')
    if (name !== 'HdecUnrealPinglu') {
      return
    }

    const Data = {
      ArmLength: 182103.671875,
      Duration: 3,
      Location: [-150933.81522, -23069.396282, 25299.628117],
      Rotation: [0, -25.206932, -68.69767],
    }
    emitUIInteraction({ Command: 'FlyTo', Data })
  }, 1000 * 3)
}

player?.addEventListener('connect', (evt) => {
  console.warn('connect ===> ', evt.detail)
  fly()
})
player?.addEventListener('debug', (evt) => {
  const detail = evt.detail as CveDebugDetail
  if (detail.ui) {
    console.warn('debug ui ===> ', detail.ui)
  }
})
player?.addEventListener('reject', (evt) => {
  console.error('reject ===> ', evt.detail)
})

const url = new URL(location.href)
url.searchParams.forEach((value, key) => {
  switch(key) {
    case 'app': {
      player?.setAttribute('application-name', value)
      break
    }
    case 'lv': {
      player?.setAttribute('level-name', value)
      break
    }
    case 'rt': {
      player?.setAttribute('aspect-ratio', value)
      break
    }
    case 'sn': {
      player?.setAttribute('scene-name', value)
      break
    }
    case 'vl': {
      player?.setAttribute('volume', value)
      break
    }
    default: {
      player?.setAttribute(key, value)
    }
  }
})
