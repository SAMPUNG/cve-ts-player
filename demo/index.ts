import { emitUIInteraction } from '@/liaison/emitter'
import { player } from '@/player/custom-element'

import type{ CveDebugDetail } from '~/types/player/emitter'

const fly = () => {
  setTimeout(() => {
    const name = player?.getAttribute('application-name')
    if (name !== 'HdecUnrealPinglu') {
      return
    }

    const Data = {
      ArmLength: 182103.671875,
      Duration: 3,
      Location: [-150933.81522, -23069.396282, 25299.628117],
      Rotation: [0, -25.206932, -68.69767],
    }
    emitUIInteraction({ Command: 'FlyTo', Data })
  }, 1000 * 3)
}

player?.addEventListener('start', (evt) => {
  console.warn('start ===> ', evt.detail)
  fly()
})
player?.addEventListener('debug', (evt) => {
  const detail = evt.detail as CveDebugDetail
  if (detail.ui) {
    console.warn('debug ui ===> ', detail.ui)
  }
})
player?.addEventListener('error', (evt) => {
  console.error('error ===> ', evt.message)
})
player?.addEventListener('change', (evt) => {
  console.warn('change ===> ', evt.detail)
})
player?.addEventListener('message', (evt) => {
  console.warn('message ===> ', evt.detail)
})

const url = new URL(location.href)
const KEYS_MAP: Record<string, string> = {
  'a': 'application-name',
  'app': 'application-name',
  'application': 'application-name',
  'ar': 'aspect-ratio',
  'h': 'height',
  'l': 'level-name',
  'ln': 'level-name',
  'level': 'level-name',
  's': 'scene-name',
  'sn': 'scene-name',
  'scene': 'scene-name',
  'v': 'volume',
  'vol': 'volume',
  'w': 'width',
}
url.searchParams.forEach((value, key) => {
  player?.setAttribute(KEYS_MAP[key] ?? key, value)
})
